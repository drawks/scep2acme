name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['stable', 'oldstable']
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@19bb51245e9c80abacb2e91cc42b33fa478b8639 # v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Go Format
      run: gofmt -s -w . && git diff --exit-code

    - name: Go Vet
      run: go vet ./...

    - name: Go Mod - tidy
      run: go mod tidy && git diff --exit-code

    - name: Go Mod - download
      run: go mod download
    
    - name: Go Mod - verify
      run: go mod verify
    
    - name: Go Generate
      run: go generate ./... && git diff --exit-code

    - name: Go Build
      run: go build ./...
    
    - name: Go Test
      if: ${{ !inputs.skipTests }}
      run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt ./...

    - name: Go Benchmark
      run: go test -v -shuffle=on -run=- -bench=. -benchtime=1x ./...

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5
      with:
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
